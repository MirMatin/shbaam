#*******************************************************************************
#.travis.yml
#*******************************************************************************

#Purpose:
#Travis CI is a hosted continuous integration service, that is, it allows 
#running code directly from a repository and checking that the code acts as 
#expected. The purpose of the .travis.yml file is to give instructions to Travis 
#CI on how to do the work.
#Author:
#Cedric H. David, 2017-2018


#*******************************************************************************
#System specifications for Travis CI
#*******************************************************************************
matrix:
  include:
    - os: linux
      language: generic
      sudo: required
    - os: osx
      language: generic
    - os: windows
      language: shell
  allow_failures:
    - os: windows


#*******************************************************************************
#Environment variables for different tests on multiple Travis CI workers
#*******************************************************************************
env:
- TST_PUB_DWNL='./tst_pub_dwnl_David_etal_201x_SER.sh' TST_PUB_REPR='./tst_pub_repr_David_etal_201x_SER.sh'


#*******************************************************************************
#Before installing SHBAAM
#*******************************************************************************
before_install:

#-------------------------------------------------------------------------------
#Create .netrc file for secure downloads (users need their own credentials)
#-------------------------------------------------------------------------------
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo "machine urs.earthdata.nasa.gov login $NETRC_LOGIN_EDATA password $NETRC_PSWRD_EDATA" >> ~/.netrc ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo "machine urs.earthdata.nasa.gov login $NETRC_LOGIN_EDATA password $NETRC_PSWRD_EDATA" >> ~/.netrc ; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then powershell "set-content ~/.netrc 'machine urs.earthdata.nasa.gov login $ENV:NETRC_LOGIN_EDATA password $ENV:NETRC_PSWRD_EDATA'" ; fi

#-------------------------------------------------------------------------------
#Specific to Linux
#-------------------------------------------------------------------------------
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then apt-get --version             ; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y $(grep -v -E '(^#|^$)' requirements.apt) ; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then apt list --installed          ; fi

#-------------------------------------------------------------------------------
#Specific to OSX
#-------------------------------------------------------------------------------
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew --version                  ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew reinstall $(grep -v -E '(^#|^$)' requirements.brw) ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew list                       ; fi

#-------------------------------------------------------------------------------
#Specific to Windows
#-------------------------------------------------------------------------------
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then choco info choco            ; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then powershell "choco install --no-progress ((gc requirements.cho) -notmatch '^#' -match '\S')" ; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH="C:\\ProgramData\\MiniConda2\\;C:\\ProgramData\\MiniConda2\\Scripts;$ENV:PATH" ; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then choco list --local-only     ; fi

#-------------------------------------------------------------------------------
#General environment details (OS-agnostic)
#-------------------------------------------------------------------------------
- echo $TRAVIS_OS_NAME
- which python
- python --version
- python -c "import site; print(site.getsitepackages())"
- which pip
- pip --version
- pip show pip


#*******************************************************************************
#Installing SHBAAM
#*******************************************************************************
install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo rm -r /usr/lib/python2.7/dist-packages/* ; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo pip install `grep 'pip==' requirements.pip` ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo rm -r /Library/Python/2.7/site-packages/* ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo pip install `grep 'pip==' requirements.pip` ; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then powershell "Remove-Item -Force -Recurse -ErrorAction SilentlyContinue C:\Python27\Lib\site-packages\*" ; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then powershell "conda install -y -q -c anaconda ((gc requirements.pip) -match 'pip==')" ; fi
- which pip
- pip --version
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install --user -r requirements.pip  ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo pip install -r requirements.pip  ; fi
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then conda install -y -q -c anaconda --file requirements.cnd ; fi


#*******************************************************************************
#Testing SHBAAM
#*******************************************************************************
script:
- cd ./tst/
- echo $TST_PUB_DWNL && $TST_PUB_DWNL
- echo $TST_PUB_REPR && $TST_PUB_REPR


#*******************************************************************************
#End
#*******************************************************************************
